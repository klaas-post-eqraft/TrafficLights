//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "KeyPadImages"
	Revision           = "0.1"
	GUID               = "{BC66779C-AD1E-45D5-8E9F-A8590CD495A9}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\KeyPadImages\KeyPad.ico"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)"
	Comment            = "class is used to get several images used to display keyboard">
	<Channels>
		<Server Name="ClassSvr" GUID="{B81F7ACC-5D98-428C-B307-C6DE6BAED7F8}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\Class\KeyPadImages\KeyPadImages.pdf"/>
			<File Path=".\Class\KeyPadImages\KeyPadImages_eng.pdf"/>
		</Files>
	</Dependencies>
	<RevDoku>
		<Owner Company="sigmatek" Author="kolott"/>
		<Dokumentation Revision="0.1" Date="2014-02-03" Author="kolott" Company="sigmatek" Description="sa27172: missing images at buttons after reconnect to plc"/>
		<Dokumentation Revision="0.0" Date="2013-03-06" Author="kolott" Company="sigmatek" Description="release"/>
	</RevDoku>
	<Network Name="KeyPadImages">
		<!-- List of Components in this network -->
		<Components>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
KeyPadImages : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
  //Variables:
  //Functions:
	
	FUNCTION KeyPadImages
		VAR_OUTPUT
			ret_code 	: ConfStates;
		END_VAR;
	
	FUNCTION TAB ImgTab_ENTER;
	
	FUNCTION TAB ImgTab_BKSPC;
	
	FUNCTION TAB ImgTab_RIGHT;
	
	FUNCTION TAB ImgTab_LEFT;
	
	FUNCTION GLOBAL GetImage
		VAR_INPUT
			imgid 	: UDINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: UDINT;
		END_VAR;
	
	FUNCTION TAB ImgTab_DEC;
	
	FUNCTION TAB ImgTab_INC;
	
	FUNCTION TAB ImgTab_CANCEL;
	
	FUNCTION GLOBAL GetTitleLineHeight
		VAR_INPUT
			frame 	: DINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: INT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB KeyPadImages::@CT_
0$UINT,
2#0100000000000000$UINT, //TY_KEYPADIMAGES
0$UINT, 1$UINT, (SIZEOF(::KeyPadImages))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(1581172638), "KeyPadImages", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::KeyPadImages.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
END_FUNCTION


#define USER_CNT_KeyPadImages 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_KeyPadImages] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION KeyPadImages::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_KeyPadImages, pCmd := #vmt.CmdTable);
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ret_code	:= KeyPadImages();

END_FUNCTION

//{{LSL_IMPLEMENTATION

VAR_PRIVATE
  kpImgNo : array[0..6] of udint;
END_VAR

FUNCTION TAB KeyPadImages::ImgTab_ENTER

  0x4D,0x50,0x43,0x00,0x00,0x00,0x13,0x00,0x12,0x00,0x1F,0xF8,0x03,0x00,0x08,0x1F,
  0xF8,0x02,0x00,0x00,0x09,0x1F,0xF8,0x06,0x1F,0xF8,0x01,0x00,0x00,0x02,0xFF,0xFF,
  0x01,0x00,0x00,0x09,0x1F,0xF8,0x04,0x1F,0xF8,0x01,0x00,0x00,0x04,0xFF,0xFF,0x01,
  0x00,0x00,0x09,0x1F,0xF8,0x02,0x1F,0xF8,0x01,0x00,0x00,0x06,0xFF,0xFF,0x0A,0x00,
  0x00,0x01,0x10,0x84,0x11,0xFF,0xFF,0x01,0x00,0x00,0x01,0x10,0x84,0x11,0xFF,0xFF,
  0x01,0x00,0x00,0x03,0x1F,0xF8,0x06,0xFF,0xFF,0x01,0x00,0x00,0x06,0x1F,0xF8,0x02,
  0xFF,0xFF,0x01,0x00,0x00,0x05,0x1F,0xF8,0x04,0xFF,0xFF,0x01,0x00,0x00,0x06,0x1F,
  0xF8,0x02,0xFF,0xFF,0x01,0x00,0x00,0x07,0x1F,0xF8,0x02,0xFF,0xFF,0x07,0x1F,0xF8,
  0x02,0xFF,0xFF,0x01,0x00,0x00,0x10,0x1F,0xF8,0x02,0xFF,0xFF,0x01,0x00,0x00,0x10,
  0x1F,0xF8,0x02,0xFF,0xFF,0x01,0x00,0x00,0x10,0x1F,0xF8,0x02,0xFF,0xFF,0x01,0x00,
  0x00,0x10,0x1F,0xF8,0x02,0xFF,0xFF,0x01,0x00,0x00,0x10,0x1F,0xF8,0x02,0xFF,0xFF,
  0x01,0x00,0x00,0x10,0x1F,0xF8,0x02,0xFF,0xFF,0x01,0x00,0x00,0x10,0x1F,0xF8,0x02,
  0xFF,0xFF,0x01,0x00,0x00,0x10,0x1F,0xF8,0x02,0xFF,0xFF,0x01,0x00,0x00,0x10,0x1F,
  0xF8,0x02,0xFF,0xFF,0x01,0x1F,0xF8

END_FUNCTION

FUNCTION TAB KeyPadImages::ImgTab_BKSPC

  0x4D,0x50,0x22,0x00,0x00,0x00,0x1D,0x00,0x09,0x00,0x1F,0xF8,0x03,0x00,0x08,0x1F,
  0xF8,0x02,0x00,0x00,0x13,0x1F,0xF8,0x06,0x1F,0xF8,0x01,0x00,0x00,0x02,0xFF,0xFF,
  0x01,0x00,0x00,0x13,0x1F,0xF8,0x04,0x1F,0xF8,0x01,0x00,0x00,0x04,0xFF,0xFF,0x01,
  0x00,0x00,0x13,0x1F,0xF8,0x02,0x1F,0xF8,0x01,0x00,0x00,0x06,0xFF,0xFF,0x14,0x00,
  0x00,0x01,0x10,0x84,0x1B,0xFF,0xFF,0x01,0x00,0x00,0x01,0x10,0x84,0x1B,0xFF,0xFF,
  0x01,0x1F,0xF8,0x03,0x1F,0xF8,0x06,0xFF,0xFF,0x01,0x00,0x00,0x13,0x1F,0xF8,0x05,
  0x1F,0xF8,0x04,0xFF,0xFF,0x01,0x00,0x00,0x13,0x1F,0xF8,0x07,0x1F,0xF8,0x02,0xFF,
  0xFF,0x14,0x1F,0xF8

END_FUNCTION

FUNCTION TAB KeyPadImages::ImgTab_RIGHT

  0x4D,0x50,0x1D,0x00,0x00,0x00,0x12,0x00,0x09,0x00,0x1F,0xF8,0x03,0x00,0x0A,0x1F,
  0xF8,0x01,0x00,0x00,0x07,0x1F,0xF8,0x09,0x1F,0xF8,0x02,0xFF,0xFF,0x02,0x00,0x00,
  0x05,0x1F,0xF8,0x09,0x1F,0xF8,0x04,0xFF,0xFF,0x02,0x00,0x00,0x03,0x1F,0xF8,0x01,
  0x1F,0xF8,0x08,0x00,0x00,0x06,0xFF,0xFF,0x02,0x00,0x00,0x01,0x1F,0xF8,0x11,0xFF,
  0xFF,0x01,0x00,0x00,0x11,0xFF,0xFF,0x01,0x10,0x84,0x09,0x1F,0xF8,0x06,0xFF,0xFF,
  0x03,0x1F,0xF8,0x09,0x1F,0xF8,0x04,0xFF,0xFF,0x05,0x1F,0xF8,0x09,0x1F,0xF8,0x02,
  0xFF,0xFF,0x07,0x1F,0xF8

END_FUNCTION

FUNCTION TAB KeyPadImages::ImgTab_LEFT

  0x4D,0x50,0x22,0x00,0x00,0x00,0x13,0x00,0x09,0x00,0x1F,0xF8,0x03,0x00,0x08,0x1F,
  0xF8,0x02,0x00,0x00,0x09,0x1F,0xF8,0x06,0x1F,0xF8,0x01,0x00,0x00,0x02,0xFF,0xFF,
  0x01,0x00,0x00,0x09,0x1F,0xF8,0x04,0x1F,0xF8,0x01,0x00,0x00,0x04,0xFF,0xFF,0x01,
  0x00,0x00,0x09,0x1F,0xF8,0x02,0x1F,0xF8,0x01,0x00,0x00,0x06,0xFF,0xFF,0x0A,0x00,
  0x00,0x01,0x10,0x84,0x11,0xFF,0xFF,0x01,0x00,0x00,0x01,0x10,0x84,0x11,0xFF,0xFF,
  0x01,0x1F,0xF8,0x03,0x1F,0xF8,0x06,0xFF,0xFF,0x01,0x00,0x00,0x09,0x1F,0xF8,0x05,
  0x1F,0xF8,0x04,0xFF,0xFF,0x01,0x00,0x00,0x09,0x1F,0xF8,0x07,0x1F,0xF8,0x02,0xFF,
  0xFF,0x0A,0x1F,0xF8

END_FUNCTION

FUNCTION TAB KeyPadImages::ImgTab_DEC

  0x4D,0x50,0x5A,0x00,0x00,0x00,0x0F,0x00,0x10,0x00,0x1F,0xF8,0x03,0x00,0x07,0x1F,
  0xF8,0x01,0x00,0x00,0x07,0x1F,0xF8,0x06,0x1F,0xF8,0x01,0x10,0x84,0x01,0xFF,0xFF,
  0x01,0x00,0x00,0x06,0x1F,0xF8,0x05,0x1F,0xF8,0x01,0x10,0x84,0x01,0xFF,0xFF,0x01,
  0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,0x05,0x1F,0xF8,0x04,0x1F,0xF8,0x01,0x10,
  0x84,0x01,0xFF,0xFF,0x03,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,0x04,0x1F,0xF8,
  0x03,0x1F,0xF8,0x01,0x10,0x84,0x01,0xFF,0xFF,0x05,0x1F,0xF8,0x01,0xFF,0xFF,0x01,
  0x00,0x00,0x03,0x1F,0xF8,0x02,0x1F,0xF8,0x01,0x10,0x84,0x01,0xFF,0xFF,0x07,0x1F,
  0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,0x02,0x1F,0xF8,0x01,0x1F,0xF8,0x01,0x10,0x84,
  0x01,0xFF,0xFF,0x09,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,0x01,0x1F,0xF8,0x01,
  0x10,0x84,0x01,0xFF,0xFF,0x0B,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,0x05,0xFF,
  0xFF,0x05,0x1F,0xF8,0x05,0xFF,0xFF,0x04,0x1F,0xF8,0x01,0xFF,0xFF,0x05,0x1F,0xF8,
  0x01,0xFF,0xFF,0x01,0x00,0x00,0x03,0x1F,0xF8,0x04,0x1F,0xF8,0x01,0xFF,0xFF,0x05,
  0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,0x03,0x1F,0xF8,0x04,0x1F,0xF8,0x01,0xFF,
  0xFF,0x05,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,0x03,0x1F,0xF8,0x04,0x1F,0xF8,
  0x01,0xFF,0xFF,0x05,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,0x03,0x1F,0xF8,0x04,
  0x1F,0xF8,0x01,0xFF,0xFF,0x05,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,0x03,0x1F,
  0xF8,0x04,0x1F,0xF8,0x01,0xFF,0xFF,0x05,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,
  0x03,0x1F,0xF8,0x04,0x1F,0xF8,0x07,0xFF,0xFF,0x04,0x1F,0xF8

END_FUNCTION

FUNCTION TAB KeyPadImages::ImgTab_INC

  0x4D,0x50,0x5D,0x00,0x00,0x00,0x10,0x00,0x10,0x00,0x1F,0xF8,0x03,0x00,0x05,0x1F,
  0xF8,0x07,0x00,0x00,0x04,0x1F,0xF8,0x04,0x1F,0xF8,0x07,0xFF,0xFF,0x01,0x00,0x00,
  0x04,0x1F,0xF8,0x04,0x1F,0xF8,0x01,0xFF,0xFF,0x05,0x1F,0xF8,0x01,0xFF,0xFF,0x01,
  0x00,0x00,0x04,0x1F,0xF8,0x04,0x1F,0xF8,0x01,0xFF,0xFF,0x05,0x1F,0xF8,0x01,0xFF,
  0xFF,0x01,0x00,0x00,0x04,0x1F,0xF8,0x04,0x1F,0xF8,0x01,0xFF,0xFF,0x05,0x1F,0xF8,
  0x01,0xFF,0xFF,0x01,0x00,0x00,0x04,0x1F,0xF8,0x04,0x1F,0xF8,0x01,0xFF,0xFF,0x05,
  0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,0x04,0x1F,0xF8,0x04,0x1F,0xF8,0x01,0xFF,
  0xFF,0x05,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x00,0x00,0x04,0x1F,0xF8,0x01,0x1F,0xF8,
  0x03,0x00,0x00,0x01,0xFF,0xFF,0x05,0x1F,0xF8,0x01,0xFF,0xFF,0x05,0x00,0x00,0x05,
  0xFF,0xFF,0x05,0x1F,0xF8,0x05,0xFF,0xFF,0x01,0x1F,0xF8,0x01,0x10,0x84,0x01,0xFF,
  0xFF,0x0B,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x10,0x84,0x01,0x1F,0xF8,0x01,0x1F,0xF8,
  0x01,0x10,0x84,0x01,0xFF,0xFF,0x09,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x10,0x84,0x02,
  0x1F,0xF8,0x02,0x1F,0xF8,0x01,0x10,0x84,0x01,0xFF,0xFF,0x07,0x1F,0xF8,0x01,0xFF,
  0xFF,0x01,0x10,0x84,0x03,0x1F,0xF8,0x03,0x1F,0xF8,0x01,0x10,0x84,0x01,0xFF,0xFF,
  0x05,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x10,0x84,0x04,0x1F,0xF8,0x04,0x1F,0xF8,0x01,
  0x10,0x84,0x01,0xFF,0xFF,0x03,0x1F,0xF8,0x01,0xFF,0xFF,0x01,0x10,0x84,0x05,0x1F,
  0xF8,0x05,0x1F,0xF8,0x01,0x10,0x84,0x01,0xFF,0xFF,0x01,0x1F,0xF8,0x01,0xFF,0xFF,
  0x01,0x10,0x84,0x06,0x1F,0xF8,0x06,0x1F,0xF8,0x01,0x10,0x84,0x01,0xFF,0xFF,0x01,
  0x10,0x84,0x07,0x1F,0xF8

END_FUNCTION

FUNCTION TAB KeyPadImages::ImgTab_CANCEL
  
  0x4D,0x50,0x37,0x00,0x00,0x00,0x0E,0x00,0x0E,0x00,0x1F,0xF8,0x03,0x00,0x02,0xFF,
  0xFF,0x0A,0x1F,0xF8,0x02,0xFF,0xFF,0x03,0xFF,0xFF,0x08,0x1F,0xF8,0x03,0xFF,0xFF,
  0x01,0x1F,0xF8,0x03,0xFF,0xFF,0x06,0x1F,0xF8,0x03,0xFF,0xFF,0x01,0x1F,0xF8,0x02,
  0x1F,0xF8,0x03,0xFF,0xFF,0x04,0x1F,0xF8,0x03,0xFF,0xFF,0x02,0x1F,0xF8,0x03,0x1F,
  0xF8,0x03,0xFF,0xFF,0x02,0x1F,0xF8,0x02,0xFF,0xFF,0x01,0xBE,0xFF,0x03,0x1F,0xF8,
  0x04,0x1F,0xF8,0x06,0xFF,0xFF,0x04,0x1F,0xF8,0x05,0x1F,0xF8,0x04,0xFF,0xFF,0x05,
  0x1F,0xF8,0x05,0x1F,0xF8,0x04,0xFF,0xFF,0x05,0x1F,0xF8,0x04,0x1F,0xF8,0x06,0xFF,
  0xFF,0x04,0x1F,0xF8,0x03,0x1F,0xF8,0x03,0xFF,0xFF,0x02,0x1F,0xF8,0x03,0xFF,0xFF,
  0x03,0x1F,0xF8,0x02,0x1F,0xF8,0x03,0xFF,0xFF,0x04,0x1F,0xF8,0x03,0xFF,0xFF,0x02,
  0x1F,0xF8,0x01,0x1F,0xF8,0x03,0xFF,0xFF,0x06,0x1F,0xF8,0x03,0xFF,0xFF,0x01,0x1F,
  0xF8,0x03,0xFF,0xFF,0x08,0x1F,0xF8,0x03,0xFF,0xFF,0x02,0xFF,0xFF,0x0A,0x1F,0xF8,
  0x02,0xFF,0xFF

END_FUNCTION

FUNCTION KeyPadImages::KeyPadImages
	VAR_OUTPUT
		ret_code 	: ConfStates;
	END_VAR
  VAR
  	no : udint;
  END_VAR

  no := sizeof(kpImgNo) / sizeof(kpImgNo[0]);
  while(no) do
    no -= 1;
    kpImgNo[no] := DEFSCOPE;
  end_while;
  
	ret_code := C_OK;

END_FUNCTION

FUNCTION GLOBAL KeyPadImages::GetImage
	VAR_INPUT
		imgid 	: UDINT;
	END_VAR
	VAR_OUTPUT
		retcode 	: UDINT;
	END_VAR

  retcode := DEFSCOPE;
  if(imgid < (sizeof(kpImgNo) / sizeof(kpImgNo[0]))) then
//    if(kpImgNo[imgid] = DEFSCOPE) then  // SA27172: nicht wieder implementieren ansonsten nach softreset keine images mehr
      case (imgid) of
        0 : kpImgNo[0] := ImageList_Add_BMO("_@BKSPC", #ImgTab_BKSPC() + 4);
        1 : kpImgNo[1] := ImageList_Add_BMO("_@ENTER", #ImgTab_ENTER() + 4);
        2 : kpImgNo[2] := ImageList_Add_BMO("_@RIGHT", #ImgTab_RIGHT() + 4);
        3 : kpImgNo[3] := ImageList_Add_BMO("_@LEFT", #ImgTab_LEFT() + 4);
        4 : kpImgNo[4] := ImageList_Add_BMO("_@INC", #ImgTab_INC() + 4);
        5 : kpImgNo[5] := ImageList_Add_BMO("_@DEC", #ImgTab_DEC() + 4);
        6 : kpImgNo[6] := ImageList_Add_BMO("_@CANCEL", #ImgTab_CANCEL() + 4);
      end_case;
//    end_if;

    retcode := kpImgNo[imgid];
  end_if;
  
END_FUNCTION


FUNCTION GLOBAL KeyPadImages::GetTitleLineHeight
	VAR_INPUT
		frame 	: DINT;
	END_VAR
	VAR_OUTPUT
		retcode 	: INT;
	END_VAR
  
  retcode := 30;
  case frame of
    111, 101, 112, 105,
    FRAME_CORAL_CANCEL : retcode := 36;
  end_case;

END_FUNCTION
