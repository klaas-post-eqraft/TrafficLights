//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)

//{{LSL_DEFINES
#DEFINE MULTIPLIER  11035152
#DEFINE INCREMENT 12345
#DEFINE MODULUS 214748364

//}}LSL_DEFINES

//{{LSL_DECLARATION

(*!
<Class
	Name               = "Random"
	Revision           = "0.0"
	GUID               = "{39E15D7C-9DCA-4C09-8EFB-6A249CDF0E46}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{2F03199C-4EEB-4BE0-A430-1A47EA1E9544}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
	</Channels>
</Class>
*)
Random : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
  //Variables:
		Seed 	: UDINT;
  //Functions:
	
	FUNCTION GLOBAL GetRandomNumber
		VAR_INPUT
			Minimum 	: DINT;
			Maximum 	: DINT;
		END_VAR
		VAR_OUTPUT
			RandomNumber 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Random::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_RANDOM
0$UINT, 0$UINT, (SIZEOF(::Random))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(3871546707), "Random", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Random.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
END_FUNCTION


#define USER_CNT_Random 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Random] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Random::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR

	ret_code := C_OK;

END_FUNCTION

//{{LSL_IMPLEMENTATION
//----------------------------------------------------------------------------------------------------
//  Externally called methods
//----------------------------------------------------------------------------------------------------

FUNCTION GLOBAL Random::GetRandomNumber
	VAR_INPUT
		Minimum 	: DINT;
		Maximum 	: DINT;
	END_VAR
	VAR_OUTPUT
		RandomNumber 	: DINT;
	END_VAR
    
    IF Seed = 0 THEN
        Seed := 123;
    END_IF;
    
    // This algorithm is a Linear congruential generator (LCG).
    // Not safe for uses relating to security. 
    Seed := (MULTIPLIER * Seed + INCREMENT) MOD MODULUS;
    RandomNumber := Minimum + (TO_DINT(Seed) MOD (Maximum - Minimum + 1));
    
END_FUNCTION
